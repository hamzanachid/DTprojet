Index: src/main/java/org/example/entities/Note.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.entities;\n\npublic class Note {\n    private int id;\n    private Etudiant etudiant;\n    private ModaliteEvaluation modaliteEvaluation;\n    private double note;\n    private boolean absence;\n    private boolean validation;\n\n    // Getters and Setters\n    // Constructors\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/entities/Note.java b/src/main/java/org/example/entities/Note.java
--- a/src/main/java/org/example/entities/Note.java	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/src/main/java/org/example/entities/Note.java	(date 1735688968616)
@@ -8,6 +8,51 @@
     private boolean absence;
     private boolean validation;
 
-    // Getters and Setters
-    // Constructors
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    public Etudiant getEtudiant() {
+        return etudiant;
+    }
+
+    public void setEtudiant(Etudiant etudiant) {
+        this.etudiant = etudiant;
+    }
+
+    public ModaliteEvaluation getModaliteEvaluation() {
+        return modaliteEvaluation;
+    }
+
+    public void setModaliteEvaluation(ModaliteEvaluation modaliteEvaluation) {
+        this.modaliteEvaluation = modaliteEvaluation;
+    }
+
+    public double getNote() {
+        return note;
+    }
+
+    public void setNote(double note) {
+        this.note = note;
+    }
+
+    public boolean isAbsence() {
+        return absence;
+    }
+
+    public void setAbsence(boolean absence) {
+        this.absence = absence;
+    }
+
+    public boolean isValidation() {
+        return validation;
+    }
+
+    public void setValidation(boolean validation) {
+        this.validation = validation;
+    }
 }
Index: src/main/java/org/example/entities/Module.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.entities;\n\nimport java.util.List;\n\npublic class Module {\n    private int id;\n    private String code;\n    private String nom;\n    private Filiere filiere;\n    private String semestre;\n    private List<ElementDeModule> elementsDeModule;\n\n    // Getters and Setters\n    // Constructors\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/entities/Module.java b/src/main/java/org/example/entities/Module.java
--- a/src/main/java/org/example/entities/Module.java	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/src/main/java/org/example/entities/Module.java	(date 1735688952334)
@@ -10,6 +10,51 @@
     private String semestre;
     private List<ElementDeModule> elementsDeModule;
 
-    // Getters and Setters
-    // Constructors
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    public String getCode() {
+        return code;
+    }
+
+    public void setCode(String code) {
+        this.code = code;
+    }
+
+    public String getNom() {
+        return nom;
+    }
+
+    public void setNom(String nom) {
+        this.nom = nom;
+    }
+
+    public Filiere getFiliere() {
+        return filiere;
+    }
+
+    public void setFiliere(Filiere filiere) {
+        this.filiere = filiere;
+    }
+
+    public String getSemestre() {
+        return semestre;
+    }
+
+    public void setSemestre(String semestre) {
+        this.semestre = semestre;
+    }
+
+    public List<ElementDeModule> getElementsDeModule() {
+        return elementsDeModule;
+    }
+
+    public void setElementsDeModule(List<ElementDeModule> elementsDeModule) {
+        this.elementsDeModule = elementsDeModule;
+    }
 }
\ No newline at end of file
Index: src/main/java/org/example/entities/Etudiant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.entities;\n\nimport java.util.List;\n\npublic class Etudiant {\n    private int id;\n    private String matricule;\n    private Filiere filiere;\n    private List<Module> modules;\n    private List<Note> notes;\n\n    // Getters and Setters\n    // Constructors\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/entities/Etudiant.java b/src/main/java/org/example/entities/Etudiant.java
--- a/src/main/java/org/example/entities/Etudiant.java	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/src/main/java/org/example/entities/Etudiant.java	(date 1735688787527)
@@ -9,6 +9,43 @@
     private List<Module> modules;
     private List<Note> notes;
 
-    // Getters and Setters
-    // Constructors
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    public String getMatricule() {
+        return matricule;
+    }
+
+    public void setMatricule(String matricule) {
+        this.matricule = matricule;
+    }
+
+    public Filiere getFiliere() {
+        return filiere;
+    }
+
+    public void setFiliere(Filiere filiere) {
+        this.filiere = filiere;
+    }
+
+    public List<Module> getModules() {
+        return modules;
+    }
+
+    public void setModules(List<Module> modules) {
+        this.modules = modules;
+    }
+
+    public List<Note> getNotes() {
+        return notes;
+    }
+
+    public void setNotes(List<Note> notes) {
+        this.notes = notes;
+    }
 }
\ No newline at end of file
Index: src/main/java/org/example/entities/Filiere.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.entities;\n\nimport java.util.List;\n\npublic class Filiere {\n    private int id;\n    private String nom;\n    private List<Module> modules;\n\n    // Getters and Setters\n    // Constructors\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/entities/Filiere.java b/src/main/java/org/example/entities/Filiere.java
--- a/src/main/java/org/example/entities/Filiere.java	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/src/main/java/org/example/entities/Filiere.java	(date 1735688644585)
@@ -7,6 +7,36 @@
     private String nom;
     private List<Module> modules;
 
-    // Getters and Setters
-    // Constructors
+    public Filiere() {
+    }
+
+    public Filiere(int id, String nom, List<Module> modules) {
+        this.id = id;
+        this.nom = nom;
+        this.modules = modules;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    public String getNom() {
+        return nom;
+    }
+
+    public void setNom(String nom) {
+        this.nom = nom;
+    }
+
+    public List<Module> getModules() {
+        return modules;
+    }
+
+    public void setModules(List<Module> modules) {
+        this.modules = modules;
+    }
 }
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.example</groupId>\n    <artifactId>DTProjet</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n    <dependencies>\n        <dependency>\n            <groupId>org.postgresql</groupId>\n            <artifactId>postgresql</artifactId>\n            <version>42.5.0</version>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter</artifactId>\n            <version>RELEASE</version>\n            <scope>test</scope>\n        </dependency>\n\n    </dependencies>\n\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/pom.xml	(date 1735662767098)
@@ -15,9 +15,17 @@
     </properties>
     <dependencies>
         <dependency>
-            <groupId>org.postgresql</groupId>
-            <artifactId>postgresql</artifactId>
-            <version>42.5.0</version>
+            <groupId>com.h2database</groupId>
+            <artifactId>h2</artifactId>
+            <version>2.3.232</version>
+            <scope>test</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>com.h2database</groupId>
+            <artifactId>h2</artifactId>
+            <version>2.1.214</version>
+            <scope>runtime</scope>
         </dependency>
         <dependency>
             <groupId>org.junit.jupiter</groupId>
@@ -25,7 +33,6 @@
             <version>RELEASE</version>
             <scope>test</scope>
         </dependency>
-
     </dependencies>
 
 </project>
\ No newline at end of file
Index: src/main/java/org/example/config/DatabaseConnection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.config;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\npublic class DatabaseConnection {\n\n    private static final String URL = \"jdbc:postgresql://localhost:5432/students\";\n    private static final String USER = \"postgres\";\n    private static final String PASSWORD = \"HN2002hn\";\n\n    private static DatabaseConnection instance;\n\n    private DatabaseConnection() {}\n\n    public static DatabaseConnection getInstance() {\n        if (instance == null) {\n            instance = new DatabaseConnection();\n        }\n        return instance;\n    }\n\n    public Connection getConnection() throws SQLException {\n        return DriverManager.getConnection(URL, USER, PASSWORD);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/config/DatabaseConnection.java b/src/main/java/org/example/config/DatabaseConnection.java
--- a/src/main/java/org/example/config/DatabaseConnection.java	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/src/main/java/org/example/config/DatabaseConnection.java	(date 1735662727666)
@@ -6,14 +6,17 @@
 
 public class DatabaseConnection {
 
-    private static final String URL = "jdbc:postgresql://localhost:5432/students";
-    private static final String USER = "postgres";
-    private static final String PASSWORD = "HN2002hn";
+    private static final String URL = "jdbc:h2:~/test";
+    private static final String USER = "sa";
+    private static final String PASSWORD = "";           // Default password for H2 (empty y default)
 
     private static DatabaseConnection instance;
 
-    private DatabaseConnection() {}
+    // Private constructor to prevent instantiation
+    private DatabaseConnection() {
+    }
 
+    // Singleton method to get the instance of the class
     public static DatabaseConnection getInstance() {
         if (instance == null) {
             instance = new DatabaseConnection();
@@ -21,7 +24,16 @@
         return instance;
     }
 
+    // Method to get the database connection
     public Connection getConnection() throws SQLException {
+        // Explicitly load the H2 driver
+        try {
+            Class.forName("org.h2.Driver");  // Ensure the H2 driver is loaded
+        } catch (ClassNotFoundException e) {
+            throw new SQLException("H2 JDBC driver not found", e);
+        }
+
+        // Return the connection using the specified URL, username, and password
         return DriverManager.getConnection(URL, USER, PASSWORD);
     }
-}
+}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n  <component name=\"MavenProjectsManager\">\n    <option name=\"originalFiles\">\n      <list>\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/.idea/misc.xml	(date 1735662767110)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/org/example/dao/UtilisateurDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.dao;\n\n\nimport org.example.entities.Utilisateur;\nimport org.example.enums.Role;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface UtilisateurDAO {\n    Utilisateur create(Utilisateur utilisateur);\n\n    Optional<Utilisateur> findById(Long id);\n    Optional<Utilisateur> findByLogin(String login);\n    List<Utilisateur> findAll();\n    List<Utilisateur> findByRole(Role role);\n    List<Utilisateur> findByNom(String nom);\n\n    Utilisateur update(Utilisateur utilisateur);\n    boolean updateMotDePasse(Long id, String newMotDePasse);\n\n    boolean delete(Long id);\n\n    Optional<Utilisateur> authenticate(String login, String motDePasse);\n    boolean existsByLogin(String login);\n\n    List<Utilisateur> saveAll(List<Utilisateur> utilisateurs);\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/dao/UtilisateurDAO.java b/src/main/java/org/example/dao/UtilisateurDAO.java
--- a/src/main/java/org/example/dao/UtilisateurDAO.java	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/src/main/java/org/example/dao/UtilisateurDAO.java	(date 1735688160107)
@@ -9,20 +9,15 @@
 
 public interface UtilisateurDAO {
     Utilisateur create(Utilisateur utilisateur);
-
     Optional<Utilisateur> findById(Long id);
     Optional<Utilisateur> findByLogin(String login);
     List<Utilisateur> findAll();
     List<Utilisateur> findByRole(Role role);
     List<Utilisateur> findByNom(String nom);
-
     Utilisateur update(Utilisateur utilisateur);
     boolean updateMotDePasse(Long id, String newMotDePasse);
-
     boolean delete(Long id);
-
     Optional<Utilisateur> authenticate(String login, String motDePasse);
     boolean existsByLogin(String login);
-
     List<Utilisateur> saveAll(List<Utilisateur> utilisateurs);
 }
\ No newline at end of file
Index: src/main/java/org/example/services/impl/UtilisateurServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.services.impl;\n\nimport org.example.dao.UtilisateurDAO;\nimport org.example.entities.Utilisateur;\nimport org.example.enums.Role;\nimport org.example.services.UtilisateurService;\nimport org.example.builders.UtilisateurBuilder;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic class UtilisateurServiceImpl implements UtilisateurService {\n\n    private final UtilisateurDAO utilisateurDAO;\n\n    public UtilisateurServiceImpl(UtilisateurDAO utilisateurDAO) {\n        this.utilisateurDAO = utilisateurDAO;\n    }\n\n    @Override\n    public Utilisateur createUtilisateur(String nom, String prenom, String login, String motDePasse, Role role) {\n        Utilisateur utilisateur = new UtilisateurBuilder()\n                .withNom(nom)\n                .withPrenom(prenom)\n                .withLogin(login)\n                .withMotDePasse(motDePasse)\n                .withRole(role)\n                .build();\n\n        return utilisateurDAO.create(utilisateur);\n    }\n\n    @Override\n    public Optional<Utilisateur> getUtilisateurById(Long id) {\n        return utilisateurDAO.findById(id);\n    }\n\n    @Override\n    public Optional<Utilisateur> getUtilisateurByLogin(String login) {\n        return utilisateurDAO.findByLogin(login);\n    }\n\n    @Override\n    public List<Utilisateur> getAllUtilisateurs() {\n        return utilisateurDAO.findAll();\n    }\n\n    @Override\n    public List<Utilisateur> getUtilisateursByRole(Role role) {\n        return utilisateurDAO.findByRole(role);\n    }\n\n    @Override\n    public List<Utilisateur> getUtilisateursByNom(String nom) {\n        return utilisateurDAO.findByNom(nom);\n    }\n\n    @Override\n    public Utilisateur updateUtilisateur(Utilisateur utilisateur) {\n        return utilisateurDAO.update(utilisateur);\n    }\n\n    @Override\n    public boolean updateMotDePasse(Long id, String oldMotDePasse, String newMotDePasse) {\n        return false;\n    }\n\n    @Override\n    public boolean updateMotDePasse(Long id, String newMotDePasse) {\n        return utilisateurDAO.updateMotDePasse(id, newMotDePasse);\n    }\n\n    @Override\n    public boolean deleteUtilisateur(Long id) {\n        return utilisateurDAO.delete(id);\n    }\n\n    @Override\n    public boolean authenticateUtilisateur(String login, String motDePasse) {\n        Optional<Utilisateur> utilisateur = utilisateurDAO.authenticate(login, motDePasse);\n        return utilisateur.isPresent();\n    }\n\n    @Override\n    public Optional<Utilisateur> loginUtilisateur(String login, String motDePasse) {\n        return utilisateurDAO.authenticate(login, motDePasse);\n    }\n\n    @Override\n    public boolean isLoginAvailable(String login) {\n        return !utilisateurDAO.existsByLogin(login);\n    }\n\n    @Override\n    public boolean validateMotDePasse(String motDePasse) {\n        return motDePasse != null && motDePasse.length() >= 8;\n    }\n\n    @Override\n    public List<Utilisateur> saveAllUtilisateurs(List<Utilisateur> utilisateurs) {\n        return utilisateurDAO.saveAll(utilisateurs);\n    }\n\n    @Override\n    public Utilisateur signUpUtilisateur(String nom, String prenom, String login, String motDePasse, Role role) {\n        Utilisateur utilisateur = new UtilisateurBuilder()\n                .withNom(nom)\n                .withPrenom(prenom)\n                .withLogin(login)\n                .withMotDePasse(motDePasse)\n                .withRole(role)\n                .build();\n\n        return utilisateurDAO.create(utilisateur);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/services/impl/UtilisateurServiceImpl.java b/src/main/java/org/example/services/impl/UtilisateurServiceImpl.java
--- a/src/main/java/org/example/services/impl/UtilisateurServiceImpl.java	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/src/main/java/org/example/services/impl/UtilisateurServiceImpl.java	(date 1735688160093)
@@ -5,14 +5,12 @@
 import org.example.enums.Role;
 import org.example.services.UtilisateurService;
 import org.example.builders.UtilisateurBuilder;
-
 import java.util.List;
 import java.util.Optional;
 
 public class UtilisateurServiceImpl implements UtilisateurService {
 
     private final UtilisateurDAO utilisateurDAO;
-
     public UtilisateurServiceImpl(UtilisateurDAO utilisateurDAO) {
         this.utilisateurDAO = utilisateurDAO;
     }
Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\n\nimport org.example.config.DatabaseConnection;\nimport org.example.dao.UtilisateurDAO;\nimport org.example.dao.impl.UtilisateurDAOImpl;\nimport org.example.entities.Utilisateur;\nimport org.example.enums.Role;\nimport org.example.services.UtilisateurService;\nimport org.example.services.impl.UtilisateurServiceImpl;\n\npublic class Main {\n    public static void main(String[] args) {\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
--- a/src/main/java/org/example/Main.java	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/src/main/java/org/example/Main.java	(date 1735662767046)
@@ -11,5 +11,33 @@
 public class Main {
     public static void main(String[] args) {
 
+        DatabaseConnection databaseConnection=DatabaseConnection.getInstance();
+        UtilisateurDAO utilisateurDAO = UtilisateurDAOImpl.getInstance(databaseConnection);
+        UtilisateurService utilisateurService = new UtilisateurServiceImpl(utilisateurDAO);
+
+        Utilisateur utilisateur1 = utilisateurService.createUtilisateur("John", "Doe", "johndoe", "password123", Role.ADMIN);
+        System.out.println("Created utilisateur: " + utilisateur1.getNom() + " " + utilisateur1.getPrenom());
+
+        Utilisateur utilisateur2 = utilisateurService.signUpUtilisateur("Jane", "Smith", "janesmith", "securePassword", Role.ADMIN);
+        System.out.println("Signed up utilisateur: " + utilisateur2.getNom() + " " + utilisateur2.getPrenom());
+
+        System.out.println("\nAll utilisateurs:");
+        for (Utilisateur utilisateur : utilisateurService.getAllUtilisateurs()) {
+            System.out.println(utilisateur.getNom() + " " + utilisateur.getPrenom());
+        }
+
+        // Test finding utilisateur by login
+        String loginToSearch = "johndoe";
+        utilisateurService.getUtilisateurByLogin(loginToSearch).ifPresentOrElse(
+                utilisateur -> System.out.println("\nFound utilisateur by login (" + loginToSearch + "): " + utilisateur.getNom() + " " + utilisateur.getPrenom()),
+                () -> System.out.println("\nUtilisateur with login " + loginToSearch + " not found.")
+        );
+
+        // Test updating utilisateur (simulating password change)
+        boolean passwordUpdated = utilisateurService.updateMotDePasse(utilisateur1.getId(), "newPassword123");
+        System.out.println("\nPassword updated for " + utilisateur1.getNom() + ": " + passwordUpdated);
+
+        boolean utilisateurDeleted = utilisateurService.deleteUtilisateur(utilisateur1.getId());
+        System.out.println("\nUtilisateur deleted: " + utilisateurDeleted);
     }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"3894e6a4-5907-4311-8bcb-0905c1c3e93c\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/src/test/java/entities/UtilisateurTest.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/services/UtilisateurService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/services/UtilisateurService.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/services/impl/UtilisateurServiceImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/services/impl/UtilisateurServiceImpl.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectCodeStyleSettingsMigration\">\n    <option name=\"version\" value=\"2\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 3\n}</component>\n  <component name=\"ProjectId\" id=\"2qivHAj7lwygpRWMW9Dt9mJ0CvO\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"git-widget-placeholder\": \"master\",\n    \"project.structure.last.edited\": \"Libraries\",\n    \"project.structure.proportion\": \"0.0\",\n    \"project.structure.side.proportion\": \"0.0\",\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\"\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\"JUnit.UtilisateurTest\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.Main\" />\n      <module name=\"DTProjet\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"org.example.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"UtilisateurTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"DTProjet\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"entities.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"entities\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"entities.UtilisateurTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <module name=\"DTprojet\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <module name=\"DTprojet\" />\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.UtilisateurTest\" />\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"3894e6a4-5907-4311-8bcb-0905c1c3e93c\" name=\"Changes\" comment=\"\" />\n      <created>1735158119994</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1735158119994</updated>\n    </task>\n    <servers />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/.idea/workspace.xml	(date 1735748031824)
@@ -5,10 +5,16 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="3894e6a4-5907-4311-8bcb-0905c1c3e93c" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/src/test/java/entities/UtilisateurTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/config/DatabaseConnection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/config/DatabaseConnection.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/dao/UtilisateurDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/dao/UtilisateurDAO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/entities/Etudiant.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/entities/Etudiant.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/entities/Filiere.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/entities/Filiere.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/entities/Module.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/entities/Module.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/entities/Note.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/entities/Note.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/services/UtilisateurService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/services/UtilisateurService.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/services/impl/UtilisateurServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/services/impl/UtilisateurServiceImpl.java" afterDir="false" />
     </list>
@@ -21,6 +27,7 @@
     <option name="RECENT_TEMPLATES">
       <list>
         <option value="Enum" />
+        <option value="Interface" />
         <option value="Class" />
       </list>
     </option>
@@ -28,6 +35,18 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;grainme&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/hamzanachid/DTprojet.git&quot;,
+    &quot;accountId&quot;: &quot;e86e2aee-48a0-44af-9788-4af9b65fd4f5&quot;
+  }
+}</component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
@@ -38,6 +57,9 @@
   &quot;associatedIndex&quot;: 3
 }</component>
   <component name="ProjectId" id="2qivHAj7lwygpRWMW9Dt9mJ0CvO" />
+  <component name="ProjectLevelVcsManager">
+    <ConfirmationsSetting value="1" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -48,13 +70,12 @@
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "git-widget-placeholder": "master",
-    "project.structure.last.edited": "Libraries",
-    "project.structure.proportion": "0.0",
-    "project.structure.side.proportion": "0.0",
-    "settings.editor.selected.configurable": "preferences.lookFeel"
+    "ignore.virus.scanning.warn.message": "true",
+    "kotlin-language-version-configured": "true",
+    "settings.editor.selected.configurable": "JavaDoc"
   }
 }]]></component>
-  <component name="RunManager" selected="JUnit.UtilisateurTest">
+  <component name="RunManager">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="org.example.Main" />
       <module name="DTProjet" />
@@ -68,21 +89,6 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="UtilisateurTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
-      <module name="DTProjet" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="entities.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <option name="PACKAGE_NAME" value="entities" />
-      <option name="MAIN_CLASS_NAME" value="entities.UtilisateurTest" />
-      <option name="TEST_OBJECT" value="class" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
     <configuration default="true" type="JetRunConfigurationType">
       <module name="DTprojet" />
       <method v="2">
@@ -98,7 +104,6 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="JUnit.UtilisateurTest" />
         <item itemvalue="Application.Main" />
       </list>
     </recent_temporary>
Index: src/main/java/org/example/services/UtilisateurService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.services;\n\nimport org.example.entities.Utilisateur;\nimport org.example.enums.Role;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface UtilisateurService {\n    Utilisateur createUtilisateur(String nom, String prenom, String login, String motDePasse, Role role);\n\n    Optional<Utilisateur> getUtilisateurById(Long id);\n    Optional<Utilisateur> getUtilisateurByLogin(String login);\n    List<Utilisateur> getAllUtilisateurs();\n    List<Utilisateur> getUtilisateursByRole(Role role);\n\n    List<Utilisateur> getUtilisateursByNom(String nom);\n\n    Utilisateur updateUtilisateur(Utilisateur utilisateur);\n    boolean updateMotDePasse(Long id, String oldMotDePasse, String newMotDePasse);\n\n    boolean updateMotDePasse(Long id, String newMotDePasse);\n\n    boolean deleteUtilisateur(Long id);\n\n\n    boolean authenticateUtilisateur(String login, String motDePasse);\n    Optional<Utilisateur> loginUtilisateur(String login, String motDePasse);\n\n    List<Utilisateur> saveAllUtilisateurs(List<Utilisateur> utilisateurs);\n\n    Utilisateur signUpUtilisateur(String nom, String prenom, String login, String motDePasse, Role role);\n\n    boolean isLoginAvailable(String login);\n    boolean validateMotDePasse(String motDePasse);\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/services/UtilisateurService.java b/src/main/java/org/example/services/UtilisateurService.java
--- a/src/main/java/org/example/services/UtilisateurService.java	(revision aa0f582ebfbc315cde2d7a2671e50c2e785b364b)
+++ b/src/main/java/org/example/services/UtilisateurService.java	(date 1735688160097)
@@ -13,24 +13,15 @@
     Optional<Utilisateur> getUtilisateurByLogin(String login);
     List<Utilisateur> getAllUtilisateurs();
     List<Utilisateur> getUtilisateursByRole(Role role);
-
     List<Utilisateur> getUtilisateursByNom(String nom);
-
     Utilisateur updateUtilisateur(Utilisateur utilisateur);
     boolean updateMotDePasse(Long id, String oldMotDePasse, String newMotDePasse);
-
     boolean updateMotDePasse(Long id, String newMotDePasse);
-
     boolean deleteUtilisateur(Long id);
-
-
     boolean authenticateUtilisateur(String login, String motDePasse);
     Optional<Utilisateur> loginUtilisateur(String login, String motDePasse);
-
     List<Utilisateur> saveAllUtilisateurs(List<Utilisateur> utilisateurs);
-
     Utilisateur signUpUtilisateur(String nom, String prenom, String login, String motDePasse, Role role);
-
     boolean isLoginAvailable(String login);
     boolean validateMotDePasse(String motDePasse);
 }
\ No newline at end of file
